name: Xcode - Build and Analyze

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build and analyze default scheme using xcodebuild command
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Find Xcode project
        run: |
          cd SideBarMenu
          file_to_build=$(find . -name "*.xcworkspace" -o -name "*.xcodeproj" | head -n 1)
          if [ -z "$file_to_build" ]; then
            echo "No Xcode project or workspace found"
            exit 1
          fi
          echo "Found Xcode project/workspace: $file_to_build"

      - name: Set Default Scheme
        run: |
          cd SideBarMenu
          scheme_list=$(xcodebuild -list -json 2>/dev/null | tr -d "\n")
          if [ -z "$scheme_list" ]; then
            echo "Failed to list Xcode schemes."
            exit 1
          fi
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default | tee default
          echo "SCHEME=$default" >> $GITHUB_ENV

      - name: Build
        run: |
          cd SideBarMenu
          scheme=$(cat default)
          if [ -z "$scheme" ]; then
            echo "Scheme not found, aborting build."
            exit 1
          fi
          file_to_build=$(find . -name "*.xcworkspace" -o -name "*.xcodeproj" | head -n 1)
          if [ -z "$file_to_build" ]; then
            echo "No Xcode project or workspace found"
            exit 1
          fi
          file_to_build=$(echo $file_to_build | awk '{$1=$1;print}')
          xcodebuild clean build analyze -scheme "$scheme" -project "$file_to_build" | xcpretty && exit ${PIPESTATUS[0]}
